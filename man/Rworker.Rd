% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rworker.R
\name{Rworker}
\alias{Rworker}
\alias{rworker}
\title{Rworker object}
\usage{
rworker(qname = "celery", workers = 2, queue = "redis://localhost:6379",
  backend = "redis://localhost:6379")
}
\arguments{
\item{qname}{The name of the message queue.}

\item{workers}{The number of background worker processes.}

\item{queue}{A url string of type "provider://host:port".}

\item{backend}{A url string of type "provider://host:port".}
}
\description{
The Rworker object consumes messages sent to the message
broker and sends tasks to be executed in background by the
process pool.
}
\section{Usage}{
\preformatted{rwork <- rworker()
}
}

\section{Details}{

\code{$new()} creates new Rworker instance. Process pool is started and Queue
connection is established during instantiation.

\code{$start_pool()} starts all processes in the background process pool

\code{$kill_pool()} kills all processes in the background process pool

\code{$task()} registers function as task to be remotelly executed

\code{$tasks()} returns all registered tasks

\code{$consume()} listens for message broker messages and send them to be executed
by the worker process pool

\code{$execute()} method used to send tasks and arguments for background execution

\code{$update_state()} method used to gather tasks execution status from worker pool

\code{register_backend()} registers results backend
}

\examples{
\dontrun{
rwork <- rworker()

# Register task
myfun <- function() { 
    Sys.sleep(5)
}
rwork$task(myfun, name='long_running_task')

# Send task for background execution
rwork$execute('long_running_task')

# Listen to messages from message queue
rwork$consume()

}

}
